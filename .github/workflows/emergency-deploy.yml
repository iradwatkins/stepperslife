name: Emergency Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'DEPLOY_NOW'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg CACHE_BUST=${{ github.run_number }} \
            --build-arg BUILD_VERSION=3.1.0 \
            -t stepperslife:v3.1.0 \
            -t stepperslife:latest \
            .
      
      - name: Save Docker Image
        run: |
          docker save stepperslife:v3.1.0 | gzip > stepperslife-v3.1.0.tar.gz
      
      - name: Upload Docker Image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: stepperslife-v3.1.0.tar.gz
      
      - name: Deploy via Multiple Methods
        run: |
          echo "Attempting deployment via multiple methods..."
          
          # Method 1: Try Coolify webhook
          if [ ! -z "${{ secrets.COOLIFY_WEBHOOK_URL }}" ]; then
            curl -X POST \
              -H "Authorization: Bearer ${{ secrets.COOLIFY_WEBHOOK_TOKEN }}" \
              -H "Content-Type: application/json" \
              "${{ secrets.COOLIFY_WEBHOOK_URL }}" || true
          fi
          
          # Method 2: Try direct server deployment
          curl -X POST http://72.60.28.175:8000/api/deploy \
            -H "Content-Type: application/json" \
            -d '{"app": "stepperslife", "version": "3.1.0"}' || true
          
          # Method 3: GitHub deployment status
          curl -X POST \
            -H "Authorization: token ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/deployments \
            -d '{
              "ref": "main",
              "environment": "production",
              "description": "Emergency deployment v3.1.0"
            }'
      
      - name: Create Deployment Instructions
        run: |
          cat > DEPLOY_INSTRUCTIONS.txt << 'EOF'
          EMERGENCY DEPLOYMENT INSTRUCTIONS
          ==================================
          
          Version: 3.1.0
          Build: ${{ github.run_number }}
          Time: $(date)
          
          TO DEPLOY MANUALLY:
          1. Download docker image artifact from this workflow run
          2. Transfer to server: scp stepperslife-v3.1.0.tar.gz root@72.60.28.175:/tmp/
          3. Load and run:
             ssh root@72.60.28.175
             cd /tmp
             docker load < stepperslife-v3.1.0.tar.gz
             docker stop $(docker ps -q --filter name=steppers)
             docker run -d --name stepperslife-prod -p 3000:3000 stepperslife:v3.1.0
          
          VERIFICATION:
          curl https://stepperslife.com/version
          Should show: "version": "3.1.0"
          EOF
          
          cat DEPLOY_INSTRUCTIONS.txt
      
      - name: Upload Instructions
        uses: actions/upload-artifact@v4
        with:
          name: deployment-instructions
          path: DEPLOY_INSTRUCTIONS.txt